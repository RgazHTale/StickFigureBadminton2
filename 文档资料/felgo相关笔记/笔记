EntityManager：用来管理游戏中的实体对象
property：
entityContainer：设置容纳实体对象的对象，它将作为一个容器来容纳游戏中的实体对象，是felgo游戏的基础。

FontLoader：这个类型通过name or URL来加载字体。

Settings:用来管理用户的设置，如window sizes and positions,options,etc.

Loader：用来动态加载QML组件，它能在qml组件需要的时候再创建，延迟创建qml的时间，可以使用source属性或者sourceComponent属性加载，onLoaded表示加载中的事件。

Timer：定时器。
property：
interval：定时周期，单位是毫秒。
repeat：bool,决定是否重复触发。

Durdies思路：
入口文件是DurdiesMain.qml
在这个文件里面进行实体管理、字体管理、菜单scene、选择关卡scene、设置scene等等
还有一个gameScene,用于加载游戏进行的scene
然后有很多个状态，用来表示窗口

发送消息的方式就是调用消息

并不是完全抽象了每个qml

在Flappybird这个示例中：
Ground使用了精灵表单
用的是一个基实体组件

qml中我们需要一个实体文件夹，来管理
role/player和羽毛球

anchor：锚
anchors.left：btn1.right 这个组件的左边和btn1的右边对齐
anchors.leftMargin：20 左边的空白距离为20

CircleCollider可
用于碰撞检测不应该有重力，只需要不设置PhysicsWorld的gravity.y就可以了 正负号表示加速度的方向

CircleCollider中bodyType的设置，这是必须的，必须表明当前实体的运动状态，是static、dynamic、kinetic
只有动态体才能够相互碰撞

A dynamic body is a body which is affected by world forces and reacts to collisions.
A static body is a body which isn’t affected by world forces it does not react to collisions.
A kinematic body is a hybrid body which is not affected by forces and collisions like a static body but can moved with a linear velocity like a dynamic body.（kinematic像static那样不受world forces的影响，但是它又像dynamic那样可以运动）
而只有dynamic body可以相互碰撞

现在这里有个实体entity，实体组件中有个circlecollider，就像是一个物体套了一个用于判断的圆（想象成绿色面积）

只有实体对象才会有物理才能起作用

为什么使用physicsWorld之后实体对象就会具有相关的物理属性了呢？这是怎么实现的呢

BoxCollider盒子碰撞机

调整视图是根据实体的长宽来绘制的，和圆形对撞机以及盒子对撞机无关

碰撞发生怎么判定的？点击是怎么改变的？

答：碰撞检测用fixture.onBeginContact
点击改变是用的linearVelocity这个property
如：
          // initially, move to the right as linearVelocity.x is set to 100
          linearVelocity： Qt.point(100, 0)

y方向的加速度 y方向初速度为0,但是有加速度，所以过一会儿后y方向也会有速度 

对于精灵表单list模式的运用！！！！！！
必须全部有实际的数据才能成功，只要有一个组件加载失败则全部无法加载
